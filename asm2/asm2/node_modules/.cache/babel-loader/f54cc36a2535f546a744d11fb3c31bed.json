{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\front end\\\\asm2\\\\asm2\\\\src\\\\component\\\\store\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport APIContext from \"./APIContext\"; // import useFetchApi from \"./../../hooks/use-fetchApi\";\n\nimport { useEffect, useState } from \"react\"; //================\n// const Datalist = () => {\n//   console.log(\"fs\")\n//   const [dataApimovie, setdataApimovie] = useState([]);\n//   const [error, seterror] = useState(null);\n//   const [isLoading, setisLoading] = useState(true);\n//   const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\n//   const HttpApi = \"https://api.themoviedb.org/3\";\n//   const requests = {\n//     fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n//     fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n//     fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n//     fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n//     fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n//     fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n//     fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n//     fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n//   };\n//     useEffect(() => {\n//       const getData = [];\n//       const fetchApi = async () => {\n//         setisLoading(true);\n//         for (const key in requests) {\n//           const response = await fetch(`${HttpApi}${requests[key]}`);\n//           const data = await response.json();\n//           data.key = key;\n//           getData.push(data);\n//         }\n//         setisLoading(false);\n//         setdataApimovie(getData);\n//       };\n//       fetchApi().catch((error) => {\n//         setisLoading(false);\n//         seterror(error.message);\n//       });\n//     },[])\n//   return { dataApimovie, error, isLoading };\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContextProvider = props => {\n  _s();\n\n  console.log(\"fs\");\n  const [dataApimovie, setdataApimovie] = useState([]);\n  const [error, seterror] = useState(null);\n  const [isLoading, setisLoading] = useState(true);\n  const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\n  const HttpApi = \"https://api.themoviedb.org/3\";\n  const requests = {\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n  };\n  useEffect(() => {\n    const getData = [];\n\n    const fetchApi = async () => {\n      setisLoading(true);\n\n      for (const key in requests) {\n        const response = await fetch(`${HttpApi}${requests[key]}`);\n        const data = await response.json();\n        data.key = key;\n        getData.push(data);\n      }\n\n      setisLoading(false);\n      setdataApimovie(getData);\n    };\n\n    fetchApi().catch(error => {\n      setisLoading(false);\n      seterror(error.message);\n    });\n  }, []);\n  const data = {\n    dataApimovie: dataApimovie,\n    // isLoading: isLoading,\n    error: error\n  }; // if (data.isLoading) {\n  //   return (\n  //     <section>\n  //       <p>Loading........</p>\n  //     </section>\n  //   );\n  // }\n\n  if (data.error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  const context = {\n    HttpImg: \"https://image.tmdb.org/t/p/original\",\n    link_API: data.dataApimovie,\n    err: data.error,\n    isload: data.isLoading,\n    searchApi: \"/search/movie?api_key=6fc3d765745ff0bf0840cc0f79c98ab6&language=en-US\"\n  };\n  return /*#__PURE__*/_jsxDEV(APIContext.Provider, {\n    value: !data.isLoading ? context : \"\",\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"+7hOca8RqTXkIzmDXlLVtVghC4s=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["APIContext","useEffect","useState","ContextProvider","props","console","log","dataApimovie","setdataApimovie","error","seterror","isLoading","setisLoading","API_KEY","HttpApi","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","getData","fetchApi","key","response","fetch","data","json","push","catch","message","context","HttpImg","link_API","err","isload","searchApi","children"],"sources":["C:/Users/Admin/Desktop/front end/asm2/asm2/src/component/store/ContextProvider.js"],"sourcesContent":["import APIContext from \"./APIContext\";\r\n// import useFetchApi from \"./../../hooks/use-fetchApi\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//================\r\n// const Datalist = () => {\r\n//   console.log(\"fs\")\r\n//   const [dataApimovie, setdataApimovie] = useState([]);\r\n//   const [error, seterror] = useState(null);\r\n//   const [isLoading, setisLoading] = useState(true);\r\n//   const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\r\n//   const HttpApi = \"https://api.themoviedb.org/3\";\r\n//   const requests = {\r\n//     fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n//     fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n//     fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n//     fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n//     fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n//     fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n//     fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n//     fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n//   };\r\n\r\n//     useEffect(() => {\r\n//       const getData = [];\r\n\r\n//       const fetchApi = async () => {\r\n\r\n//         setisLoading(true);\r\n//         for (const key in requests) {\r\n\r\n//           const response = await fetch(`${HttpApi}${requests[key]}`);\r\n\r\n//           const data = await response.json();\r\n//           data.key = key;\r\n//           getData.push(data);\r\n//         }\r\n//         setisLoading(false);\r\n\r\n//         setdataApimovie(getData);\r\n//       };\r\n//       fetchApi().catch((error) => {\r\n//         setisLoading(false);\r\n//         seterror(error.message);\r\n//       });\r\n//     },[])\r\n\r\n//   return { dataApimovie, error, isLoading };\r\n// };\r\n\r\nconst ContextProvider = (props) => {\r\n  console.log(\"fs\");\r\n  const [dataApimovie, setdataApimovie] = useState([]);\r\n  const [error, seterror] = useState(null);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\r\n  const HttpApi = \"https://api.themoviedb.org/3\";\r\n  const requests = {\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getData = [];\r\n\r\n    const fetchApi = async () => {\r\n      setisLoading(true);\r\n      for (const key in requests) {\r\n        const response = await fetch(`${HttpApi}${requests[key]}`);\r\n\r\n        const data = await response.json();\r\n        data.key = key;\r\n        getData.push(data);\r\n      }\r\n      setisLoading(false);\r\n\r\n      setdataApimovie(getData);\r\n    };\r\n    fetchApi().catch((error) => {\r\n      setisLoading(false);\r\n      seterror(error.message);\r\n    });\r\n  }, []);\r\n  const data = {\r\n    dataApimovie: dataApimovie,\r\n    // isLoading: isLoading,\r\n    error: error,\r\n  };\r\n  // if (data.isLoading) {\r\n  //   return (\r\n  //     <section>\r\n  //       <p>Loading........</p>\r\n  //     </section>\r\n  //   );\r\n  // }\r\n  if (data.error) {\r\n    return (\r\n      <section>\r\n        <p>{data.error}</p>\r\n      </section>\r\n    );\r\n  }\r\n  const context = {\r\n    HttpImg: \"https://image.tmdb.org/t/p/original\",\r\n    link_API: data.dataApimovie,\r\n    err: data.error,\r\n    isload: data.isLoading,\r\n    searchApi:\r\n      \"/search/movie?api_key=6fc3d765745ff0bf0840cc0f79c98ab6&language=en-US\",\r\n  };\r\n  return (\r\n    <APIContext.Provider value={!data.isLoading ? context : \"\"}>\r\n      {props.children}\r\n    </APIContext.Provider>\r\n  );\r\n};\r\nexport default ContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}