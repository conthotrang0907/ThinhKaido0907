{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\front end\\\\Assignment 02 (Starter Code)\\\\asm2\\\\src\\\\component\\\\store\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport APIContext from \"./APIContext\";\nimport useFetchApi from \"./../../hooks/use-fetchApi\";\nimport { useEffect, useState, useReducer } from \"react\"; //================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst datalist = () => {\n  _s();\n\n  const [dataApimovie, setdataApimovie] = useState([]);\n  const [error, seterror] = useState(null);\n  const [isLoading, setisLoading] = useState(true);\n  const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\n  const HttpApi = \"https://api.themoviedb.org/3\";\n  const requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n  };\n  useEffect(() => {\n    const xyz = [];\n\n    const fetchApi = async () => {\n      setisLoading(true);\n\n      for (const key in requests) {\n        const response = await fetch(`${HttpApi}${requests[key]}`);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!!\");\n        }\n\n        const data = await response.json();\n        xyz.push(data);\n      }\n\n      setisLoading(false);\n      setdataApimovie(xyz);\n    };\n\n    fetchApi().catch(error => {\n      setisLoading(false);\n      seterror(error.message);\n    });\n  }, []); //   abc()\n  //   const{data}=useFetchApi(`${HttpApi}${requests.fetchTrending}`)\n  //   setdataApimovie(data)\n\n  return {\n    dataApimovie\n  };\n};\n\n_s(datalist, \"+7hOca8RqTXkIzmDXlLVtVghC4s=\");\n\nconst ContextProvider = props => {\n  // const[state,dispatch]=useReducer(reducer,initstate)\n  //   const [dataList, setdataList] = useState([]);\n  //   const dataHandler=[]\n  //   useEffect(() => {\n  //     for (const key in requests) {\n  //       const { data, isLoading, error } = useFetchApi(\n  //         `${HttpApi}${requests[key]}`\n  //       );\n  //     //   console.log(data)\n  //     }\n  //   }, []);\n  //   setdataList(dataHandler)\n  //   console.log(dataHandler)\n  const context = {\n    API_KEY: \"API_KEY\",\n    HttpApi: \"https://api.themoviedb.org/3\",\n    HttpImg: \"https://image.tmdb.org/t/p/original\",\n    link_API: datalist()\n  };\n  return /*#__PURE__*/_jsxDEV(APIContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["APIContext","useFetchApi","useEffect","useState","useReducer","datalist","dataApimovie","setdataApimovie","error","seterror","isLoading","setisLoading","API_KEY","HttpApi","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","xyz","fetchApi","key","response","fetch","ok","Error","data","json","push","catch","message","ContextProvider","props","context","HttpImg","link_API","children"],"sources":["C:/Users/Admin/Desktop/front end/Assignment 02 (Starter Code)/asm2/src/component/store/ContextProvider.js"],"sourcesContent":["import APIContext from \"./APIContext\";\r\nimport useFetchApi from \"./../../hooks/use-fetchApi\";\r\n\r\nimport { useEffect, useState, useReducer } from \"react\";\r\n\r\n//================\r\nconst datalist = () => {\r\n  const [dataApimovie, setdataApimovie] = useState([]);\r\n  const [error, seterror] = useState(null);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const API_KEY = \"6fc3d765745ff0bf0840cc0f79c98ab6\";\r\n  const HttpApi = \"https://api.themoviedb.org/3\";\r\n  const requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n  };\r\n  useEffect(() => {\r\n    const xyz = [];\r\n    const fetchApi = async () => {\r\n      setisLoading(true);\r\n      for (const key in requests) {\r\n        const response = await fetch(`${HttpApi}${requests[key]}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!!\");\r\n        }\r\n        const data = await response.json();\r\n        xyz.push(data);\r\n      }\r\n      setisLoading(false);\r\n      setdataApimovie(xyz);\r\n    };\r\n    fetchApi().catch((error) => {\r\n      setisLoading(false);\r\n      seterror(error.message);\r\n    });\r\n  }, []);\r\n\r\n  //   abc()\r\n  //   const{data}=useFetchApi(`${HttpApi}${requests.fetchTrending}`)\r\n  //   setdataApimovie(data)\r\n  return { dataApimovie };\r\n};\r\n\r\nconst ContextProvider = (props) => {\r\n  // const[state,dispatch]=useReducer(reducer,initstate)\r\n  //   const [dataList, setdataList] = useState([]);\r\n\r\n  //   const dataHandler=[]\r\n  //   useEffect(() => {\r\n  //     for (const key in requests) {\r\n  //       const { data, isLoading, error } = useFetchApi(\r\n  //         `${HttpApi}${requests[key]}`\r\n  //       );\r\n  //     //   console.log(data)\r\n  //     }\r\n  //   }, []);\r\n  //   setdataList(dataHandler)\r\n  //   console.log(dataHandler)\r\n  const context = {\r\n    API_KEY: \"API_KEY\",\r\n    HttpApi: \"https://api.themoviedb.org/3\",\r\n    HttpImg: \"https://image.tmdb.org/t/p/original\",\r\n    link_API: datalist(),\r\n  };\r\n  return (\r\n    <APIContext.Provider value={context}>{props.children}</APIContext.Provider>\r\n  );\r\n};\r\nexport default ContextProvider;\r\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAMS,OAAO,GAAG,kCAAhB;EACA,MAAMC,OAAO,GAAG,8BAAhB;EACA,MAAMC,QAAQ,GAAG;IACfC,aAAa,EAAG,8BAA6BH,OAAQ,iBADtC;IAEfI,qBAAqB,EAAG,wBAAuBJ,OAAQ,mBAFxC;IAGfK,aAAa,EAAG,4BAA2BL,OAAQ,iBAHpC;IAIfM,iBAAiB,EAAG,2BAA0BN,OAAQ,iBAJvC;IAKfO,iBAAiB,EAAG,2BAA0BP,OAAQ,iBALvC;IAMfQ,iBAAiB,EAAG,2BAA0BR,OAAQ,iBANvC;IAOfS,kBAAkB,EAAG,2BAA0BT,OAAQ,oBAPxC;IAQfU,kBAAkB,EAAG,2BAA0BV,OAAQ,iBARxC;IASfW,WAAW,EAAG,yBAAwBX,OAAQ;EAT/B,CAAjB;EAWAV,SAAS,CAAC,MAAM;IACd,MAAMsB,GAAG,GAAG,EAAZ;;IACA,MAAMC,QAAQ,GAAG,YAAY;MAC3Bd,YAAY,CAAC,IAAD,CAAZ;;MACA,KAAK,MAAMe,GAAX,IAAkBZ,QAAlB,EAA4B;QAC1B,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,OAAQ,GAAEC,QAAQ,CAACY,GAAD,CAAM,EAA5B,CAA5B;;QAEA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;QACD;;QACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACAR,GAAG,CAACS,IAAJ,CAASF,IAAT;MACD;;MACDpB,YAAY,CAAC,KAAD,CAAZ;MACAJ,eAAe,CAACiB,GAAD,CAAf;IACD,CAbD;;IAcAC,QAAQ,GAAGS,KAAX,CAAkB1B,KAAD,IAAW;MAC1BG,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACD,KAAK,CAAC2B,OAAP,CAAR;IACD,CAHD;EAID,CApBQ,EAoBN,EApBM,CAAT,CAjBqB,CAuCrB;EACA;EACA;;EACA,OAAO;IAAE7B;EAAF,CAAP;AACD,CA3CD;;GAAMD,Q;;AA6CN,MAAM+B,eAAe,GAAIC,KAAD,IAAW;EACjC;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAG;IACd1B,OAAO,EAAE,SADK;IAEdC,OAAO,EAAE,8BAFK;IAGd0B,OAAO,EAAE,qCAHK;IAIdC,QAAQ,EAAEnC,QAAQ;EAJJ,CAAhB;EAMA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAEiC,OAA5B;IAAA,UAAsCD,KAAK,CAACI;EAA5C;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAxBD;;KAAML,e;AAyBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}